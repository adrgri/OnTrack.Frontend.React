import{n as f,l as n}from"./index-28f2f15b.js";import{c as h}from"./ProjectStore-c79f291f.js";var k={exports:{}},T="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",g=T,m=g;function u(){}function y(){}y.resetWarningCache=u;var w=function(){function e(t,s,r,l,i,c){if(c!==m){var d=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw d.name="Invariant Violation",d}}e.isRequired=e;function o(){return e}var a={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:o,element:e,elementType:e,instanceOf:o,node:e,objectOf:o,oneOf:o,oneOfType:o,shape:o,exact:o,checkPropTypes:y,resetWarningCache:u};return a.PropTypes=a,a};k.exports=w();var R=k.exports;const S=f(R),p="https://ontrackbackendapi2.azurewebsites.net/api",$=h((e,o)=>({tasks:[],loading:!1,error:null,getTaskById:a=>o().tasks.find(t=>t.id===a),fetchTasks:async()=>{e({loading:!0,error:null});try{const a=await n.get(`${p}/task`);e({tasks:a.data,loading:!1})}catch(a){console.error("Failed to fetch tasks:",a),e({loading:!1,error:"Nie udało się wyświetlić zadań. Spróbuj ponownie później"})}},fetchUserTasks:async a=>{e({loading:!0,error:null});try{const s=(await n.get(`${p}/user/me`)).data.taskIds;let r=[];if(a){const i=(await n.get(`${p}/project/${a}`)).data.map(c=>c.taskIds);i.length>0&&(r=(await n.get(`${p}/task/${i}`)).data)}else s.length>0?r=(await n.get(`${p}/task`)).data.filter(i=>s.includes(i.id)):console.log("No user task IDs found.");e({tasks:r,loading:!1})}catch(t){console.error("Failed to fetch tasks:",t),e({loading:!1,error:"Nie udało się wyświetlić zadań. Spróbuj ponownie później"})}},addTask:async a=>{try{const s=(await n.post(`${p}/task`,a)).data;e(r=>({tasks:[...r.tasks,s]}))}catch(t){console.error("Failed to add task:",t)}},updateTask:async(a,t)=>{try{await n.put(`${p}/task`,t),e(s=>({tasks:s.tasks.map(r=>r.id===a?{...r,...t}:r)}))}catch(s){console.error("Failed to update task:",s)}},deleteTask:async a=>{try{await n.delete(`${p}/task/${a}`),e(t=>({tasks:t.tasks.filter(s=>s.id!==a)}))}catch(t){console.error("Failed to delete task:",t)}}}));export{S as P,R as p,$ as u};
